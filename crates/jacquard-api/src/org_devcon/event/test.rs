// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: org.devcon.event.test
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Test<'a> {
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub created_at: std::option::Option<jacquard_common::types::string::Datetime>,
    ///Description of the event
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub description: std::option::Option<jacquard_common::CowStr<'a>>,
    ///End time of the event
    pub end: jacquard_common::types::string::Datetime,
    ///Location of the event
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub location: std::option::Option<jacquard_common::CowStr<'a>>,
    ///Start time of the event
    pub start: jacquard_common::types::string::Datetime,
    ///Title of the event
    #[serde(borrow)]
    pub title: jacquard_common::CowStr<'a>,
    ///URL of the event
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub url: std::option::Option<jacquard_common::CowStr<'a>>,
}

impl jacquard_common::types::collection::Collection for Test<'_> {
    const NSID: &'static str = "org.devcon.event.test";
}