// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: social.clippr.feed.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod clip;
pub mod get_clips;
pub mod get_profile_clips;
pub mod get_profile_tags;
pub mod get_tag_list;
pub mod get_tags;
pub mod tag;

/// A view of a single bookmark (or 'clip').
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct ClipView<'a> {
    /// A reference to the actor's profile
    #[serde(borrow)]
    pub author: crate::social_clippr::actor::ProfileView<'a>,
    /// The CID of the clip
    #[serde(borrow)]
    pub cid: jacquard_common::types::string::Cid<'a>,
    /// When the tag was first indexed by the AppView
    pub indexed_at: jacquard_common::types::string::Datetime,
    /// The raw record of the clip
    #[serde(borrow)]
    pub record: jacquard_common::types::value::Data<'a>,
    /// The AT-URI of the clip
    #[serde(borrow)]
    pub uri: jacquard_common::types::string::AtUri<'a>,
}

/// A view of a single tag.
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct TagView<'a> {
    /// A reference to the actor's profile
    #[serde(borrow)]
    pub author: crate::social_clippr::actor::ProfileView<'a>,
    /// The CID of the tag
    #[serde(borrow)]
    pub cid: jacquard_common::types::string::Cid<'a>,
    /// When the tag was first indexed by the AppView
    pub indexed_at: jacquard_common::types::string::Datetime,
    /// The raw record of the tag
    #[serde(borrow)]
    pub record: jacquard_common::types::value::Data<'a>,
    /// The AT-URI to the tag
    #[serde(borrow)]
    pub uri: jacquard_common::types::string::AtUri<'a>,
}