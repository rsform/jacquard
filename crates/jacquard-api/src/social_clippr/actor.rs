// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: social.clippr.actor.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod get_preferences;
pub mod get_profile;
pub mod profile;
pub mod put_preferences;
pub mod search_clips;
pub mod search_profiles;
pub mod search_tags;

///An array of refs to various preferences.
pub type Preferences<'a> = Vec<jacquard_common::types::value::Data<'a>>;
///A view of an actor's profile.
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct ProfileView<'a> {
    ///A link to the profile's avatar
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub avatar: std::option::Option<jacquard_common::types::string::Uri<'a>>,
    ///When the profile record was first created
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub created_at: std::option::Option<jacquard_common::types::string::Datetime>,
    ///The biography associated to the profile
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub description: std::option::Option<jacquard_common::CowStr<'a>>,
    ///The DID of the profile
    #[serde(borrow)]
    pub did: jacquard_common::types::string::Did<'a>,
    ///The display name associated to the profile
    #[serde(borrow)]
    pub display_name: jacquard_common::CowStr<'a>,
    ///The handle of the profile
    #[serde(borrow)]
    pub handle: jacquard_common::types::string::Handle<'a>,
}

///Preferences for an user's publishing scopes.
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct PublishingScopesPref<'a> {
    ///What publishing scope to mark a clip as by default
    #[serde(borrow)]
    pub default_scope: jacquard_common::CowStr<'a>,
}