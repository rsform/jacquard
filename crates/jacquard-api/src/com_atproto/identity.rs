// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: com.atproto.identity.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod get_recommended_did_credentials;
pub mod refresh_identity;
pub mod request_plc_operation_signature;
pub mod resolve_did;
pub mod resolve_handle;
pub mod resolve_identity;
pub mod sign_plc_operation;
pub mod submit_plc_operation;
pub mod update_handle;

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct IdentityInfo<'a> {
    #[serde(borrow)]
    pub did: jacquard_common::types::string::Did<'a>,
    ///The complete DID document for the identity.
    #[serde(borrow)]
    pub did_doc: jacquard_common::types::value::Data<'a>,
    ///The validated handle of the account; or 'handle.invalid' if the handle did not bi-directionally match the DID document.
    #[serde(borrow)]
    pub handle: jacquard_common::types::string::Handle<'a>,
}

impl jacquard_common::IntoStatic for IdentityInfo<'_> {
    type Output = IdentityInfo<'static>;
    fn into_static(self) -> Self::Output {
        IdentityInfo {
            did: self.did.into_static(),
            did_doc: self.did_doc.into_static(),
            handle: self.handle.into_static(),
            extra_data: self.extra_data.into_static(),
        }
    }
}