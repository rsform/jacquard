// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: com.atproto.admin.enableAccountInvites
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct EnableAccountInvites<'a> {
    #[serde(borrow)]
    pub account: jacquard_common::types::string::Did<'a>,
    ///Optional reason for enabled invites.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub note: std::option::Option<jacquard_common::CowStr<'a>>,
}

impl jacquard_common::types::xrpc::XrpcRequest for EnableAccountInvites<'_> {
    const NSID: &'static str = "com.atproto.admin.enableAccountInvites";
    const METHOD: jacquard_common::types::xrpc::XrpcMethod = jacquard_common::types::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    const OUTPUT_ENCODING: &'static str = "application/json";
    type Output<'de> = ();
    type Err<'de> = jacquard_common::types::xrpc::GenericError;
}