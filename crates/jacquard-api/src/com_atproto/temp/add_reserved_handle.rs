// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: com.atproto.temp.addReservedHandle
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct AddReservedHandle<'a> {
    #[serde(borrow)]
    pub handle: jacquard_common::CowStr<'a>,
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct AddReservedHandleOutput<'a> {}
impl jacquard_common::types::xrpc::XrpcRequest for AddReservedHandle<'_> {
    const NSID: &'static str = "com.atproto.temp.addReservedHandle";
    const METHOD: jacquard_common::types::xrpc::XrpcMethod = jacquard_common::types::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    const OUTPUT_ENCODING: &'static str = "application/json";
    type Output<'de> = AddReservedHandleOutput<'de>;
    type Err<'de> = jacquard_common::types::xrpc::GenericError;
}