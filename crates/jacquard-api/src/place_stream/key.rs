// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: place.stream.key
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///Record linking an atproto identity with a stream signing key
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Key<'a> {
    ///Client-declared timestamp when this key was created.
    pub created_at: jacquard_common::types::string::Datetime,
    ///The name of the client that created this key.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub created_by: std::option::Option<jacquard_common::CowStr<'a>>,
    ///The did:key signing key for the stream.
    #[serde(borrow)]
    pub signing_key: jacquard_common::CowStr<'a>,
}

impl jacquard_common::types::collection::Collection for Key<'_> {
    const NSID: &'static str = "place.stream.key";
}