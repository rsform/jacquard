// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.bsky.video.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod get_job_status;
pub mod get_upload_limits;
pub mod upload_video;

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct JobStatus<'a> {
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    #[serde(borrow)]
    pub blob: Option<jacquard_common::types::blob::Blob<'a>>,
    #[serde(borrow)]
    pub did: jacquard_common::types::string::Did<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    #[serde(borrow)]
    pub error: Option<jacquard_common::CowStr<'a>>,
    #[serde(borrow)]
    #[builder(into)]
    pub job_id: jacquard_common::CowStr<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    #[serde(borrow)]
    pub message: Option<jacquard_common::CowStr<'a>>,
    /// Progress within the current processing state.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    pub progress: Option<i64>,
    /// The state of the video processing job. All values not listed as a known value indicate that the job is in process.
    #[serde(borrow)]
    #[builder(into)]
    pub state: jacquard_common::CowStr<'a>,
}