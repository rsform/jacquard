// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.bsky.feed.repost
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///Record representing a 'repost' of an existing Bluesky post.
#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Repost<'a> {
    pub created_at: jacquard_common::types::string::Datetime,
    #[serde(borrow)]
    pub subject: crate::com_atproto::repo::strong_ref::StrongRef<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub via: std::option::Option<crate::com_atproto::repo::strong_ref::StrongRef<'a>>,
}

impl jacquard_common::types::collection::Collection for Repost<'_> {
    const NSID: &'static str = "app.bsky.feed.repost";
}

impl jacquard_common::IntoStatic for Repost<'_> {
    type Output = Repost<'static>;
    fn into_static(self) -> Self::Output {
        Repost {
            created_at: self.created_at.into_static(),
            subject: self.subject.into_static(),
            via: self.via.into_static(),
            extra_data: self.extra_data.into_static(),
        }
    }
}