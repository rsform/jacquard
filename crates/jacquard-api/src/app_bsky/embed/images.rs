// @generated by jacquard-lexicon. DO NOT EDIT.
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Image<'a> {
    ///Alt text description of the image, for accessibility.
    #[serde(borrow)]
    pub alt: jacquard_common::CowStr<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub aspect_ratio: std::option::Option<crate::app_bsky::embed::AspectRatio<'a>>,
    #[serde(borrow)]
    pub image: jacquard_common::types::blob::Blob<'a>,
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Images<'a> {
    #[serde(borrow)]
    pub images: Vec<crate::app_bsky::embed::images::Image<'a>>,
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct View<'a> {
    #[serde(borrow)]
    pub images: Vec<crate::app_bsky::embed::images::ViewImage<'a>>,
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct ViewImage<'a> {
    ///Alt text description of the image, for accessibility.
    #[serde(borrow)]
    pub alt: jacquard_common::CowStr<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub aspect_ratio: std::option::Option<crate::app_bsky::embed::AspectRatio<'a>>,
    ///Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.
    #[serde(borrow)]
    pub fullsize: jacquard_common::types::string::Uri<'a>,
    ///Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.
    #[serde(borrow)]
    pub thumb: jacquard_common::types::string::Uri<'a>,
}