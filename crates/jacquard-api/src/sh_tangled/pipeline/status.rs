// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: sh.tangled.pipeline.status
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Status<'a> {
    ///time of creation of this status update
    pub created_at: jacquard_common::types::string::Datetime,
    ///error message if failed
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub error: std::option::Option<jacquard_common::CowStr<'a>>,
    ///exit code if failed
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub exit_code: std::option::Option<i64>,
    ///ATURI of the pipeline
    #[serde(borrow)]
    pub pipeline: jacquard_common::types::string::AtUri<'a>,
    ///status of the workflow
    #[serde(borrow)]
    pub status: jacquard_common::CowStr<'a>,
    ///name of the workflow within this pipeline
    #[serde(borrow)]
    pub workflow: jacquard_common::types::string::AtUri<'a>,
}

impl jacquard_common::types::collection::Collection for Status<'_> {
    const NSID: &'static str = "sh.tangled.pipeline.status";
}