// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: tools.ozone.verification.revokeVerifications
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    bon::Builder,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
#[builder(start_fn = new)]
pub struct RevokeVerifications<'a> {
    /// Reason for revoking the verification. This is optional and can be omitted if not needed.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    #[serde(borrow)]
    pub revoke_reason: Option<jacquard_common::CowStr<'a>>,
    /// Array of verification record uris to revoke
    #[serde(borrow)]
    pub uris: Vec<jacquard_common::types::string::AtUri<'a>>,
    #[serde(flatten)]
    #[serde(borrow)]
    #[builder(default)]
    pub extra_data: ::std::collections::BTreeMap<
        ::jacquard_common::smol_str::SmolStr,
        ::jacquard_common::types::value::Data<'a>,
    >,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct RevokeVerificationsOutput<'a> {
    /// List of verification uris that couldn't be revoked, including failure reasons
    #[serde(borrow)]
    pub failed_revocations: Vec<jacquard_common::types::value::Data<'a>>,
    /// List of verification uris successfully revoked
    #[serde(borrow)]
    pub revoked_verifications: Vec<jacquard_common::types::string::AtUri<'a>>,
}

///Response type for
///tools.ozone.verification.revokeVerifications
pub struct RevokeVerificationsResponse;
impl jacquard_common::xrpc::XrpcResp for RevokeVerificationsResponse {
    const NSID: &'static str = "tools.ozone.verification.revokeVerifications";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = RevokeVerificationsOutput<'de>;
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl<'a> jacquard_common::xrpc::XrpcRequest for RevokeVerifications<'a> {
    const NSID: &'static str = "tools.ozone.verification.revokeVerifications";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = RevokeVerificationsResponse;
}

///Endpoint type for
///tools.ozone.verification.revokeVerifications
pub struct RevokeVerificationsRequest;
impl jacquard_common::xrpc::XrpcEndpoint for RevokeVerificationsRequest {
    const PATH: &'static str = "/xrpc/tools.ozone.verification.revokeVerifications";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = RevokeVerifications<'de>;
    type Response = RevokeVerificationsResponse;
}

/// Error object for failed revocations
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct RevokeError<'a> {
    /// Description of the error that occurred during revocation.
    #[serde(borrow)]
    #[builder(into)]
    pub error: jacquard_common::CowStr<'a>,
    /// The AT-URI of the verification record that failed to revoke.
    #[serde(borrow)]
    pub uri: jacquard_common::types::string::AtUri<'a>,
}