// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: tools.ozone.communication.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod create_template;
pub mod delete_template;
pub mod list_templates;
pub mod update_template;

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct TemplateView<'a> {
    /// Subject of the message, used in emails.
    #[serde(borrow)]
    #[builder(into)]
    pub content_markdown: jacquard_common::CowStr<'a>,
    pub created_at: jacquard_common::types::string::Datetime,
    pub disabled: bool,
    #[serde(borrow)]
    #[builder(into)]
    pub id: jacquard_common::CowStr<'a>,
    /// Message language.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    pub lang: Option<jacquard_common::types::string::Language>,
    /// DID of the user who last updated the template.
    #[serde(borrow)]
    pub last_updated_by: jacquard_common::types::string::Did<'a>,
    /// Name of the template.
    #[serde(borrow)]
    #[builder(into)]
    pub name: jacquard_common::CowStr<'a>,
    /// Content of the template, can contain markdown and variable placeholders.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[builder(into)]
    #[serde(borrow)]
    pub subject: Option<jacquard_common::CowStr<'a>>,
    pub updated_at: jacquard_common::types::string::Datetime,
}