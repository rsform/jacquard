// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: net.anisota.feed.list
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///A list of posts for curation, bookmarking, or organization
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct List<'a> {
    ///Optional avatar image for the list
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub avatar: std::option::Option<jacquard_common::types::blob::Blob<'a>>,
    ///When the list was created
    pub created_at: jacquard_common::types::string::Datetime,
    ///Optional description of the list
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub description: std::option::Option<jacquard_common::CowStr<'a>>,
    ///Display name for the list
    #[serde(borrow)]
    pub name: jacquard_common::CowStr<'a>,
    ///Tags for categorizing the list
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub tags: std::option::Option<Vec<jacquard_common::CowStr<'a>>>,
}

impl jacquard_common::types::collection::Collection for List<'_> {
    const NSID: &'static str = "net.anisota.feed.list";
}