// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: my.skylights.listItem
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Builtin<'a> {
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub r#type: std::option::Option<BuiltinRecordType<'a>>,
}

#[jacquard_derive::open_union]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(tag = "$type")]
#[serde(bound(deserialize = "'de: 'a"))]
pub enum BuiltinRecordType<'a> {
    #[serde(rename = "my.skylights.listItem#inProgress")]
    ListItemInProgress(Box<crate::my_skylights::list_item::InProgress>),
    #[serde(rename = "my.skylights.listItem#queue")]
    ListItemQueue(Box<crate::my_skylights::list_item::Queue>),
    #[serde(rename = "my.skylights.listItem#abandoned")]
    ListItemAbandoned(Box<crate::my_skylights::list_item::Abandoned>),
    #[serde(rename = "my.skylights.listItem#owned")]
    ListItemOwned(Box<crate::my_skylights::list_item::Owned>),
    #[serde(rename = "my.skylights.listItem#wishlist")]
    ListItemWishlist(Box<crate::my_skylights::list_item::Wishlist>),
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct ListItem<'a> {
    pub added_at: jacquard_common::types::string::Datetime,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub item: std::option::Option<crate::my_skylights::Item<'a>>,
    #[serde(borrow)]
    pub list: ListItemRecordList<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub note: std::option::Option<jacquard_common::CowStr<'a>>,
    #[serde(borrow)]
    pub position: jacquard_common::CowStr<'a>,
}

#[jacquard_derive::open_union]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(tag = "$type")]
#[serde(bound(deserialize = "'de: 'a"))]
pub enum ListItemRecordList<'a> {
    #[serde(rename = "my.skylights.list")]
    List(Box<crate::my_skylights::list::List<'a>>),
}