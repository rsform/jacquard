// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: chat.bsky.moderation.getActorMetadata
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct GetActorMetadata<'a> {
    #[serde(borrow)]
    pub actor: jacquard_common::types::string::Did<'a>,
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct GetActorMetadataOutput<'a> {
    #[serde(borrow)]
    pub all: jacquard_common::types::value::Data<'a>,
    #[serde(borrow)]
    pub day: jacquard_common::types::value::Data<'a>,
    #[serde(borrow)]
    pub month: jacquard_common::types::value::Data<'a>,
}

impl jacquard_common::types::xrpc::XrpcRequest for GetActorMetadata<'_> {
    const NSID: &'static str = "chat.bsky.moderation.getActorMetadata";
    const METHOD: jacquard_common::types::xrpc::XrpcMethod = jacquard_common::types::xrpc::XrpcMethod::Query;
    const OUTPUT_ENCODING: &'static str = "application/json";
    type Output<'de> = GetActorMetadataOutput<'de>;
    type Err<'de> = jacquard_common::types::xrpc::GenericError;
}

#[jacquard_derive::lexicon]
#[derive(serde::Serialize, serde::Deserialize, Debug, Clone, PartialEq, Eq)]
#[serde(rename_all = "camelCase")]
pub struct Metadata<'a> {
    pub convos: i64,
    pub convos_started: i64,
    pub messages_received: i64,
    pub messages_sent: i64,
}