// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: chat.bsky.moderation.getActorMetadata
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    bon::Builder,
    jacquard_derive::IntoStatic
)]
#[builder(start_fn = new)]
#[serde(rename_all = "camelCase")]
pub struct GetActorMetadata<'a> {
    #[serde(borrow)]
    pub actor: jacquard_common::types::string::Did<'a>,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct GetActorMetadataOutput<'a> {
    #[serde(borrow)]
    pub all: jacquard_common::types::value::Data<'a>,
    #[serde(borrow)]
    pub day: jacquard_common::types::value::Data<'a>,
    #[serde(borrow)]
    pub month: jacquard_common::types::value::Data<'a>,
}

///Response type for
///chat.bsky.moderation.getActorMetadata
pub struct GetActorMetadataResponse;
impl jacquard_common::xrpc::XrpcResp for GetActorMetadataResponse {
    const NSID: &'static str = "chat.bsky.moderation.getActorMetadata";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = GetActorMetadataOutput<'de>;
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl<'a> jacquard_common::xrpc::XrpcRequest for GetActorMetadata<'a> {
    const NSID: &'static str = "chat.bsky.moderation.getActorMetadata";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Query;
    type Response = GetActorMetadataResponse;
}

///Endpoint type for
///chat.bsky.moderation.getActorMetadata
pub struct GetActorMetadataRequest;
impl jacquard_common::xrpc::XrpcEndpoint for GetActorMetadataRequest {
    const PATH: &'static str = "/xrpc/chat.bsky.moderation.getActorMetadata";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Query;
    type Request<'de> = GetActorMetadata<'de>;
    type Response = GetActorMetadataResponse;
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct Metadata<'a> {
    pub convos: i64,
    pub convos_started: i64,
    pub messages_received: i64,
    pub messages_sent: i64,
}