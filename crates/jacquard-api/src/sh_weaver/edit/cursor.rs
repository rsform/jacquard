// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: sh.weaver.edit.cursor
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct ContainerId<'a> {
    #[serde(borrow)]
    pub value: ContainerIdRecordValue<'a>,
}

#[jacquard_derive::open_union]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(tag = "$type")]
#[serde(bound(deserialize = "'de: 'a"))]
pub enum ContainerIdRecordValue<'a> {}
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct CursorSide<'a> {
    ///The side of an item the cursor is on (left = -1, right = 1, middle = 0)
    pub value: i64,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Id<'a> {
    pub counter: i64,
    pub peer: i64,
}

///An edit record for a notebook.
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Cursor<'a> {
    #[serde(borrow)]
    pub container: crate::sh_weaver::edit::cursor::ContainerId<'a>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub id: std::option::Option<crate::sh_weaver::edit::cursor::Id<'a>>,
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub side: std::option::Option<crate::sh_weaver::edit::cursor::CursorSide<'a>>,
}

impl jacquard_common::types::collection::Collection for Cursor<'_> {
    const NSID: &'static str = "sh.weaver.edit.cursor";
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct NormalContainerId<'a> {
    #[serde(borrow)]
    pub container_type: jacquard_common::CowStr<'a>,
    pub counter: i64,
    pub peer: i64,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct RootContainerId<'a> {
    #[serde(borrow)]
    pub container_type: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub name: jacquard_common::CowStr<'a>,
}