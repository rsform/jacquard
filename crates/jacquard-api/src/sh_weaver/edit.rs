// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: sh.weaver.edit.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod cursor;
pub mod diff;
pub mod root;

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct DocRef<'a> {
    #[serde(borrow)]
    pub value: DocRefValue<'a>,
}

#[jacquard_derive::open_union]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(tag = "$type")]
#[serde(bound(deserialize = "'de: 'a"))]
pub enum DocRefValue<'a> {
    #[serde(rename = "sh.weaver.edit.defs#notebookRef")]
    NotebookRef(Box<crate::sh_weaver::edit::NotebookRef<'a>>),
    #[serde(rename = "sh.weaver.edit.defs#entryRef")]
    EntryRef(Box<crate::sh_weaver::edit::EntryRef<'a>>),
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct EntryRef<'a> {
    #[serde(borrow)]
    pub notebook: crate::com_atproto::repo::strong_ref::StrongRef<'a>,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct NotebookRef<'a> {
    #[serde(borrow)]
    pub notebook: crate::com_atproto::repo::strong_ref::StrongRef<'a>,
}