// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.blebbit.authr.folder.deleteFolder
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    bon::Builder,
    jacquard_derive::IntoStatic
)]
#[builder(start_fn = new)]
#[serde(rename_all = "camelCase")]
pub struct DeleteFolderParams<'a> {
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    #[builder(into)]
    pub id: std::option::Option<jacquard_common::CowStr<'a>>,
}

/// XRPC request marker type
#[derive(
    Debug,
    Clone,
    Copy,
    PartialEq,
    Eq,
    serde::Serialize,
    serde::Deserialize,
    jacquard_derive::IntoStatic
)]
pub struct DeleteFolder;
/// Response type for
///app.blebbit.authr.folder.deleteFolder
pub struct DeleteFolderResponse;
impl jacquard_common::xrpc::XrpcResp for DeleteFolderResponse {
    const NSID: &'static str = "app.blebbit.authr.folder.deleteFolder";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = ();
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl jacquard_common::xrpc::XrpcRequest for DeleteFolder {
    const NSID: &'static str = "app.blebbit.authr.folder.deleteFolder";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = DeleteFolderResponse;
}

/// Endpoint type for
///app.blebbit.authr.folder.deleteFolder
pub struct DeleteFolderRequest;
impl jacquard_common::xrpc::XrpcEndpoint for DeleteFolderRequest {
    const PATH: &'static str = "/xrpc/app.blebbit.authr.folder.deleteFolder";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = DeleteFolder;
    type Response = DeleteFolderResponse;
}