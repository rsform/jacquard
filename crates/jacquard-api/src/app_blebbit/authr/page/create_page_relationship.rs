// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.blebbit.authr.page.createPageRelationship
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    Default
)]
#[serde(rename_all = "camelCase")]
pub struct CreatePageRelationship<'a> {
    #[serde(borrow)]
    pub relation: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub resource: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub subject: jacquard_common::CowStr<'a>,
}

///Response type for
///app.blebbit.authr.page.createPageRelationship
pub struct CreatePageRelationshipResponse;
impl jacquard_common::xrpc::XrpcResp for CreatePageRelationshipResponse {
    const NSID: &'static str = "app.blebbit.authr.page.createPageRelationship";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = ();
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl<'a> jacquard_common::xrpc::XrpcRequest for CreatePageRelationship<'a> {
    const NSID: &'static str = "app.blebbit.authr.page.createPageRelationship";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = CreatePageRelationshipResponse;
}

///Endpoint type for
///app.blebbit.authr.page.createPageRelationship
pub struct CreatePageRelationshipRequest;
impl jacquard_common::xrpc::XrpcEndpoint for CreatePageRelationshipRequest {
    const PATH: &'static str = "/xrpc/app.blebbit.authr.page.createPageRelationship";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = CreatePageRelationship<'de>;
    type Response = CreatePageRelationshipResponse;
}