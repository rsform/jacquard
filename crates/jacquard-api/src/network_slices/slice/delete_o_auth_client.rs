// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: network.slices.slice.deleteOAuthClient
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    bon::Builder,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
#[builder(start_fn = new)]
pub struct DeleteOAuthClient<'a> {
    ///OAuth client ID to delete
    #[serde(borrow)]
    #[builder(into)]
    pub client_id: jacquard_common::CowStr<'a>,
    #[serde(flatten)]
    #[serde(borrow)]
    #[builder(default)]
    pub extra_data: ::std::collections::BTreeMap<
        ::jacquard_common::smol_str::SmolStr,
        ::jacquard_common::types::value::Data<'a>,
    >,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct DeleteOAuthClientOutput<'a> {
    ///Success confirmation message
    #[serde(borrow)]
    pub message: jacquard_common::CowStr<'a>,
}

///Response type for
///network.slices.slice.deleteOAuthClient
pub struct DeleteOAuthClientResponse;
impl jacquard_common::xrpc::XrpcResp for DeleteOAuthClientResponse {
    const NSID: &'static str = "network.slices.slice.deleteOAuthClient";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = DeleteOAuthClientOutput<'de>;
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl<'a> jacquard_common::xrpc::XrpcRequest for DeleteOAuthClient<'a> {
    const NSID: &'static str = "network.slices.slice.deleteOAuthClient";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = DeleteOAuthClientResponse;
}

///Endpoint type for
///network.slices.slice.deleteOAuthClient
pub struct DeleteOAuthClientRequest;
impl jacquard_common::xrpc::XrpcEndpoint for DeleteOAuthClientRequest {
    const PATH: &'static str = "/xrpc/network.slices.slice.deleteOAuthClient";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = DeleteOAuthClient<'de>;
    type Response = DeleteOAuthClientResponse;
}