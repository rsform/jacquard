// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: network.slices.waitlist.invite
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///An invite granting a DID access, created by the slice owner
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Invite<'a> {
    ///When this invitation was created
    pub created_at: jacquard_common::types::string::Datetime,
    ///The DID being invited
    #[serde(borrow)]
    pub did: jacquard_common::types::string::Did<'a>,
    ///Optional expiration date for this invitation
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub expires_at: std::option::Option<jacquard_common::types::string::Datetime>,
    ///The AT URI of the slice this invite is for
    #[serde(borrow)]
    pub slice: jacquard_common::types::string::AtUri<'a>,
}

impl jacquard_common::types::collection::Collection for Invite<'_> {
    const NSID: &'static str = "network.slices.waitlist.invite";
}