// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: place.stream.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod chat;
pub mod graph;
pub mod key;
pub mod live;
pub mod livestream;
pub mod richtext;
pub mod segment;
pub mod server;

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct BlockView<'a> {
    #[serde(borrow)]
    pub blocker: crate::app_bsky::actor::ProfileViewBasic<'a>,
    #[serde(borrow)]
    pub cid: jacquard_common::types::string::Cid<'a>,
    pub indexed_at: jacquard_common::types::string::Datetime,
    #[serde(borrow)]
    pub record: crate::app_bsky::graph::block::Block<'a>,
    #[serde(borrow)]
    pub uri: jacquard_common::types::string::AtUri<'a>,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    Default
)]
#[serde(rename_all = "camelCase")]
pub struct Rendition<'a> {
    #[serde(borrow)]
    pub name: jacquard_common::CowStr<'a>,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    bon::Builder
)]
#[serde(rename_all = "camelCase")]
pub struct Renditions<'a> {
    #[serde(borrow)]
    pub renditions: Vec<crate::place_stream::Rendition<'a>>,
}