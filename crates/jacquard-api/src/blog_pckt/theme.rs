// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: blog.pckt.theme
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///Theme configuration for a blog publication
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Theme<'a> {
    ///Dark mode color palette
    #[serde(borrow)]
    pub dark: crate::blog_pckt::theme::Palette<'a>,
    ///Font family name (optional)
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub font: std::option::Option<jacquard_common::CowStr<'a>>,
    ///Light mode color palette
    #[serde(borrow)]
    pub light: crate::blog_pckt::theme::Palette<'a>,
}

impl jacquard_common::types::collection::Collection for Theme<'_> {
    const NSID: &'static str = "blog.pckt.theme";
}

///Color palette with CSS hex values
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Palette<'a> {
    ///Accent color (hex value)
    #[serde(borrow)]
    pub accent: jacquard_common::CowStr<'a>,
    ///Background color (hex value)
    #[serde(borrow)]
    pub background: jacquard_common::CowStr<'a>,
    ///Link color (hex value)
    #[serde(borrow)]
    pub link: jacquard_common::CowStr<'a>,
    ///Surface hover color (hex value)
    #[serde(borrow)]
    pub surface_hover: jacquard_common::CowStr<'a>,
    ///Primary text color (hex value)
    #[serde(borrow)]
    pub text: jacquard_common::CowStr<'a>,
}