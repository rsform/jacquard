// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.rocksky.charts.defs
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

pub mod get_scrobbles_chart;

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    Default
)]
#[serde(rename_all = "camelCase")]
pub struct ChartsView<'a> {
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub scrobbles: std::option::Option<
        Vec<crate::app_rocksky::charts::ScrobbleViewBasic<'a>>,
    >,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    Default
)]
#[serde(rename_all = "camelCase")]
pub struct ScrobbleViewBasic<'a> {
    /// The number of scrobbles on this date.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub count: std::option::Option<i64>,
    /// The date of the scrobble.
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    pub date: std::option::Option<jacquard_common::types::string::Datetime>,
}