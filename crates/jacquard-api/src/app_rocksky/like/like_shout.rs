// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.rocksky.like.likeShout
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic,
    Default
)]
#[serde(rename_all = "camelCase")]
pub struct LikeShout<'a> {
    /// The unique identifier of the shout to like
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub uri: std::option::Option<jacquard_common::types::string::AtUri<'a>>,
}

#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct LikeShoutOutput<'a> {
    #[serde(flatten)]
    #[serde(borrow)]
    pub value: crate::app_rocksky::shout::ShoutView<'a>,
}

///Response type for
///app.rocksky.like.likeShout
pub struct LikeShoutResponse;
impl jacquard_common::xrpc::XrpcResp for LikeShoutResponse {
    const NSID: &'static str = "app.rocksky.like.likeShout";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = LikeShoutOutput<'de>;
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl<'a> jacquard_common::xrpc::XrpcRequest for LikeShout<'a> {
    const NSID: &'static str = "app.rocksky.like.likeShout";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = LikeShoutResponse;
}

///Endpoint type for
///app.rocksky.like.likeShout
pub struct LikeShoutRequest;
impl jacquard_common::xrpc::XrpcEndpoint for LikeShoutRequest {
    const PATH: &'static str = "/xrpc/app.rocksky.like.likeShout";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = LikeShout<'de>;
    type Response = LikeShoutResponse;
}