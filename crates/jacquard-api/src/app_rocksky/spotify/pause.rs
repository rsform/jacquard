// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: app.rocksky.spotify.pause
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

/// XRPC request marker type
#[derive(
    Debug,
    Clone,
    Copy,
    PartialEq,
    Eq,
    serde::Serialize,
    serde::Deserialize,
    jacquard_derive::IntoStatic
)]
pub struct Pause;
/// Response type for
///app.rocksky.spotify.pause
pub struct PauseResponse;
impl jacquard_common::xrpc::XrpcResp for PauseResponse {
    const NSID: &'static str = "app.rocksky.spotify.pause";
    const ENCODING: &'static str = "application/json";
    type Output<'de> = ();
    type Err<'de> = jacquard_common::xrpc::GenericError<'de>;
}

impl jacquard_common::xrpc::XrpcRequest for Pause {
    const NSID: &'static str = "app.rocksky.spotify.pause";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Response = PauseResponse;
}

/// Endpoint type for
///app.rocksky.spotify.pause
pub struct PauseRequest;
impl jacquard_common::xrpc::XrpcEndpoint for PauseRequest {
    const PATH: &'static str = "/xrpc/app.rocksky.spotify.pause";
    const METHOD: jacquard_common::xrpc::XrpcMethod = jacquard_common::xrpc::XrpcMethod::Procedure(
        "application/json",
    );
    type Request<'de> = Pause;
    type Response = PauseResponse;
}