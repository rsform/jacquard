// @generated by jacquard-lexicon. DO NOT EDIT.
//
// Lexicon: lol.skittr.actor.theme
//
// This file was automatically generated from Lexicon schemas.
// Any manual changes will be overwritten on the next regeneration.

///Profile customization values
#[jacquard_derive::lexicon]
#[derive(
    serde::Serialize,
    serde::Deserialize,
    Debug,
    Clone,
    PartialEq,
    Eq,
    jacquard_derive::IntoStatic
)]
#[serde(rename_all = "camelCase")]
pub struct Theme<'a> {
    ///A background image, must be either PNG or JPEG
    #[serde(skip_serializing_if = "std::option::Option::is_none")]
    #[serde(borrow)]
    pub background: std::option::Option<jacquard_common::types::blob::Blob<'a>>,
    #[serde(borrow)]
    pub bg_color: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub link_color: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub side_border: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub side_color: jacquard_common::CowStr<'a>,
    #[serde(borrow)]
    pub text_color: jacquard_common::CowStr<'a>,
}

impl jacquard_common::types::collection::Collection for Theme<'_> {
    const NSID: &'static str = "lol.skittr.actor.theme";
}