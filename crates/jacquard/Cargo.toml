[package]
name = "jacquard"
description.workspace = true
edition.workspace = true
version.workspace = true
authors.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
readme.workspace = true
exclude.workspace = true
license.workspace = true

[features]
default = ["api_full", "dns", "loopback", "derive"]
derive = ["dep:jacquard-derive"]
# Minimal API bindings
api = ["jacquard-api/minimal"]
# Bluesky API bindings
api_bluesky = ["api", "jacquard-api/bluesky"]
# Bluesky API bindings, plus a curated selection of community lexicons
api_full = [
    "api",
    "jacquard-api/bluesky",
    "jacquard-api/other",
    "jacquard-api/lexicon_community",
]
# All captured generated lexicon API bindings
api_all = ["api_full", "jacquard-api/ufos"]

# Propagate loopback to oauth (server + browser helper)
loopback = ["jacquard-oauth/loopback", "jacquard-oauth/browser-open"]
# Enable tracing instrumentation
tracing = [
    "dep:tracing",
    "jacquard-common/tracing",
    "jacquard-oauth/tracing",
    "jacquard-identity/tracing",
]
dns = ["jacquard-identity/dns"]
streaming = [
    "jacquard-common/websocket",
    "jacquard-oauth/streaming",
    "jacquard-identity/streaming",
    "dep:n0-future",
    "dep:futures",
    "jacquard-api/streaming",
]
websocket = ["jacquard-common/websocket"]
zstd = ["jacquard-common/zstd"]

[[example]]
name = "oauth_timeline"
path = "../../examples/oauth_timeline.rs"

[[example]]
name = "create_post"
path = "../../examples/create_post.rs"

[[example]]
name = "post_with_image"
path = "../../examples/post_with_image.rs"

[[example]]
name = "update_profile"
path = "../../examples/update_profile.rs"

[[example]]
name = "public_atproto_feed"
path = "../../examples/public_atproto_feed.rs"

[[example]]
name = "create_whitewind_post"
path = "../../examples/create_whitewind_post.rs"

[[example]]
name = "read_whitewind_post"
path = "../../examples/read_whitewind_post.rs"

[[example]]
name = "read_tangled_repo"
path = "../../examples/read_tangled_repo.rs"

[[example]]
name = "stream_get_blob"
path = "../../examples/stream_get_blob.rs"
required-features = ["api_bluesky", "streaming"]

[[example]]
name = "resolve_did"
path = "../../examples/resolve_did.rs"

[[example]]
name = "update_preferences"
path = "../../examples/update_preferences.rs"
required-features = ["api_bluesky"]


[[example]]
name = "streaming_upload"
path = "../../examples/streaming_upload.rs"
required-features = ["api_bluesky", "streaming"]

[[example]]
name = "streaming_download"
path = "../../examples/streaming_download.rs"
required-features = ["api_bluesky", "streaming"]

[[example]]
name = "app_password_create_post"
path = "../../examples/app_password_create_post.rs"
required-features = ["api_bluesky"]

[[example]]
name = "subscribe_repos"
path = "../../examples/subscribe_repos.rs"
required-features = ["api_bluesky", "streaming"]

[[example]]
name = "subscribe_jetstream"
path = "../../examples/subscribe_jetstream.rs"
required-features = ["streaming"]


[dependencies]
jacquard-api = { version = "0.6", path = "../jacquard-api" }
jacquard-common = { version = "0.6", path = "../jacquard-common", features = [
    "reqwest-client",
] }
jacquard-oauth = { version = "0.6", path = "../jacquard-oauth" }
jacquard-derive = { version = "0.6", path = "../jacquard-derive", optional = true }
jacquard-identity = { version = "0.6", path = "../jacquard-identity" }

bon.workspace = true
trait-variant.workspace = true
bytes.workspace = true
http.workspace = true
miette = { workspace = true }
reqwest = { workspace = true, features = ["charset", "json", "gzip"] }
serde.workspace = true
serde_html_form.workspace = true
serde_ipld_dagcbor.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tokio = { workspace = true, default-features = false, features = ["sync"] }
url.workspace = true
smol_str.workspace = true
percent-encoding.workspace = true
regex.workspace = true
webpage.workspace = true
jose-jwk = { workspace = true, features = ["p256"] }
p256 = { workspace = true, features = ["ecdsa"] }
rand_core.workspace = true
tracing = { workspace = true, optional = true }
n0-future = { workspace = true, optional = true }
futures = { version = "0.3", optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest = { workspace = true, features = [
    "http2",
    "system-proxy",
    "rustls-tls",
] }
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "fs"] }

[target.'cfg(target_family = "wasm")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }

[dev-dependencies]
clap.workspace = true
miette = { workspace = true, features = ["fancy"] }
tokio = { workspace = true, features = ["signal"] }
viuer = { version =  "0.9", features = ["print-file"] }
tiff = { version = "0.6.0-alpha" }
image = { version = "0.25" }

[package.metadata.docs.rs]
features = ["api_all", "derive", "dns", "loopback", "streaming"]
